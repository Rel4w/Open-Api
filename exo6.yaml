openapi: 3.1.0
info:
  title: User Profile API
  version: 1.0.0
servers:
  - url: http://localhost:8000
paths:
  /users/{id}:
    get:
      summary: Récupère un utilisateur avec toutes ses informations
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Profil utilisateur complet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'

  /users:
    post:
      summary: Crée une liste d’utilisateurs sans identifiant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateUserProfile'
      responses:
        '201':
          description: Utilisateurs créés avec leurs identifiants
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfile'

  /users/{id}/personalInfo:
    put:
      summary: Met à jour uniquement les informations personnelles
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalInfo'
      responses:
        '200':
          description: Informations personnelles mises à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'

  /users/{id}/address:
    put:
      summary: Met à jour uniquement l’adresse
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '200':
          description: Adresse mise à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'

  /users/{id}/preferences:
    put:
      summary: Met à jour uniquement les préférences
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Preferences'
      responses:
        '200':
          description: Préférences mises à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'

components:
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: string
      example: "USR123"
  schemas:
    UserProfile:
      allOf:
        - $ref: '#/components/schemas/CreateUserProfile'
        - type: object
          properties:
            identifier:
              type: string
              example: "USR123"
    CreateUserProfile:
      type: object
      properties:
        personalInfo:
          $ref: '#/components/schemas/PersonalInfo'
        address:
          $ref: '#/components/schemas/Address'
        preferences:
          $ref: '#/components/schemas/Preferences'
    PersonalInfo:
      type: object
      properties:
        first_name:
          type: string
          example: Alice
        last_name:
          type: string
          example: Martin
        birthdate:
          type: string
          format: date
          example: 2000-01-01
        email:
          type: string
          format: email
          example: alice@example.com
    Address:
      type: object
      properties:
        address_street:
          type: string
          example: 10 Rue de l’Indépendance
        address_city:
          type: string
          example: Antananarivo
        address_country:
          type: string
          example: Madagascar
        address_postal_code:
          type: integer
          example: 101
    Preferences:
      type: object
      properties:
        needs_newsletter:
          type: boolean
          example: true
        language:
          type: string
          enum: [mg, fr, eng]
          example: fr
